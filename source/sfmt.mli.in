external get_id_string: unit -> string = "mlmt_sfmt_${SFMT_MEXP}_get_id_string"

val min_int32_array_length: int
val min_int64_array_length: int

type t

external make_int32: int32 -> t = "mlmt_sfmt_${SFMT_MEXP}_make_int32"
external make_int32_array: int32 array -> t =
	"mlmt_sfmt_${SFMT_MEXP}_make_int32_array"
val make: int array -> t
val make_self_init: unit -> t

external copy: t -> t = "mlmt_sfmt_${SFMT_MEXP}_copy"

external bits32: t -> (int32 [@ocaml.unboxed]) =
	"mlmt_sfmt_${SFMT_MEXP}_bits32" "mlmt_sfmt_${SFMT_MEXP}_bits32_unboxed"
	[@@ocaml.noalloc]
external bits64: t -> (int64 [@ocaml.unboxed]) =
	"mlmt_sfmt_${SFMT_MEXP}_bits64" "mlmt_sfmt_${SFMT_MEXP}_bits64_unboxed"
	[@@ocaml.noalloc]
external float_bits32: t -> (float [@ocaml.unboxed]) =
	"mlmt_sfmt_${SFMT_MEXP}_float_bits32"
	"mlmt_sfmt_${SFMT_MEXP}_float_bits32_unboxed"
	[@@ocaml.noalloc]
external float_bits53: t -> (float [@ocaml.unboxed]) =
	"mlmt_sfmt_${SFMT_MEXP}_float_bits53"
	"mlmt_sfmt_${SFMT_MEXP}_float_bits53_unboxed"
	[@@ocaml.noalloc]

val fill_int32_bigarray: t ->
	(int32, Bigarray.int32_elt, Bigarray.c_layout) Bigarray.Array1.t -> int ->
	int -> unit
val fill_int64_bigarray: t ->
	(int64, Bigarray.int64_elt, Bigarray.c_layout) Bigarray.Array1.t -> int ->
	int -> unit

val int: t -> int -> int
val int32: t -> int32 -> int32
val int64: t -> int64 -> int64
val nativeint: t -> nativeint -> nativeint
val float: t -> float -> float (* [0,bound), unlike Stdlib.Random.float *)
val bool: t -> bool

val import: int32 array * int -> t
external export: t -> int32 array * int = "mlmt_sfmt_${SFMT_MEXP}_export"
